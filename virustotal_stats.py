import virustotal_api
import os
import time # so we can avoid exceeding the VirusTotal quotas
import json

debug = True

# MAX REQUEST RATE: 4 per minute (post and get!)

# This script should be in the same folder as the folders:
# 	itch_download
#	itch_extract
def main():
	cwd = os.getcwd()
	folder = '\\itch_extract\\'

	# Loop over everything in that folder
	itch_folders = os.listdir(cwd + folder)
	if (debug): print("Games to post:", itch_folders)

	# Keep a map from folder names to resource keys
	itch_resource_keys = {}
	for game in itch_folders:
		path = cwd + folder + game
		exe_path = find_exe_path(path)
		if (exe_path == 'No path'):
			print("No exe found for " + game)
			continue

		resource = virustotal_api.post_file(exe_path) # broken
		itch_resource_keys[game] = resource
		if (debug): print(exe_path)
		if (debug): print(resource)

		print("Sleeping for 15s (don't want to DOS VirusTotal...)")
		time.sleep(15) # rate limit us to just below 4 requests per minute

	if (debug): print(itch_resource_keys)

	# Write map out to file
	with open('dump.txt', 'w') as file:
		file.write(json.dumps(itch_resource_keys))

'''
Given a path to a higher level folder, find the likely exe.
'''
def find_exe_path(folder_path):
	# Walk recursively downwards until you find an exe.
	folder_path += '\\'
	exes = []
	for (dirpath, dirnames, filenames) in os.walk(folder_path):
		for name in filenames:
			if name.endswith('.exe'):
				return dirpath + '\\' + name
				# exes.append(dirpath + '\\' + name) # currently unused

	return 'No path'


if __name__== "__main__":
  main()